# AUTOGENERATED FROM 'common/queries/transcriptions/transcript_update.edgeql' WITH:
#     $ edgedb-py --tls-security=insecure -P 5656 -d precepto --dir ./common/queries


from __future__ import annotations
import dataclasses
import datetime
import edgedb
import enum
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class TranscriptUpdateResult(NoPydanticValidation):
    id: uuid.UUID


class TranscriptionBackendStatusType(enum.Enum):
    DRAFT = "draft"
    RECORDING_SERVICE = "recording_service"
    TRANSCRIPTION_SERVICE = "transcription_service"
    SUMMARIZATION_SERVICE = "summarization_service"
    COMPLETED = "completed"
    FAILED = "failed"


class TranscriptionStatusType(enum.Enum):
    SIGNED = "signed"
    NOT_SIGNED = "not_signed"
    QUEUED = "queued"
    FAILED = "failed"
    PROCESSING = "processing"
    DRAFT = "draft"


async def transcript_update(
    executor: edgedb.AsyncIOExecutor,
    *,
    name: str | None = None,
    status: TranscriptionStatusType,
    backend_status: TranscriptionBackendStatusType,
    place_in_queue: int | None = None,
    next_backend_step: str,
    template_id: uuid.UUID,
    audio_url: str | None = None,
    transcript: str | None = None,
    final_transcript: str | None = None,
    backend_updated_at: datetime.datetime | None = None,
    duration: float | None = None,
    words: int | None = None,
    speakers: int | None = None,
    confidence: float | None = None,
    language: str | None = None,
    speaker_labels: bool | None = None,
    summary: str | None = None,
    notes: str | None = None,
    marked_for_delete: bool | None = None,
    marked_for_delete_date: datetime.datetime | None = None,
    id: uuid.UUID,
) -> TranscriptUpdateResult | None:
    return await executor.query_single(
        """\
        # Update a transcription's information
        UPDATE Transcription
        FILTER .id = <uuid>$id
        SET {
            name := <optional str>$name,
            status := <TranscriptionStatusType>$status,
            backend_status := <TranscriptionBackendStatusType>$backend_status,
            place_in_queue := <optional int16>$place_in_queue,
            next_backend_step := <str>$next_backend_step,
            # analytics := { <uuid>$analytics_id1, <uuid>$analytics_id2 }, ITS EASIER to just update the analytics directly
            template := (select Template filter .id = <uuid>$template_id) if exists <optional uuid>$template_id else .template,
            # created_by :=  (select User filter .id = <uuid>$user_id) if exists <optional uuid>$user_id else .created_by,
            audio_url := <optional str>$audio_url,
            transcript := <optional str>$transcript,
            final_transcript := <optional str>$final_transcript,
            backend_updated_at := <optional datetime>$backend_updated_at,
            duration := <optional float32>$duration,
            words := <optional int16>$words,
            speakers := <optional int16>$speakers,
            confidence := <optional float32>$confidence,
            language := <optional str>$language,
            speaker_labels := <optional bool>$speaker_labels,
            # keywords := array<str>$keywords,
            # topics := array<str>$topics,
            # actions :=  array<str>$actions,
            # translations := { <uuid>$translation_id1, <uuid>$translation_id2 },
            summary := <optional str>$summary,
            notes := <optional str>$notes,
            marked_for_delete := <optional bool>$marked_for_delete,
            marked_for_delete_date := <optional datetime>$marked_for_delete_date
        };\
        """,
        name=name,
        status=status,
        backend_status=backend_status,
        place_in_queue=place_in_queue,
        next_backend_step=next_backend_step,
        template_id=template_id,
        audio_url=audio_url,
        transcript=transcript,
        final_transcript=final_transcript,
        backend_updated_at=backend_updated_at,
        duration=duration,
        words=words,
        speakers=speakers,
        confidence=confidence,
        language=language,
        speaker_labels=speaker_labels,
        summary=summary,
        notes=notes,
        marked_for_delete=marked_for_delete,
        marked_for_delete_date=marked_for_delete_date,
        id=id,
    )
