# AUTOGENERATED FROM 'common/queries/templates/template_read_all.edgeql' WITH:
#     $ edgedb-py --tls-security=insecure -P 5656 -d precepto --dir ./common/queries


from __future__ import annotations
import dataclasses
import datetime
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class TemplateReadAllResult(NoPydanticValidation):
    updated_at: datetime.datetime
    created_at: datetime.datetime
    id: uuid.UUID
    description: str | None
    image_url: str | None
    is_public: bool | None
    name: str
    template: str | None
    created_by: TemplateReadAllResultCreatedBy
    shared_with: list[TemplateReadAllResultCreatedBy]


@dataclasses.dataclass
class TemplateReadAllResultCreatedBy(NoPydanticValidation):
    updated_at: datetime.datetime
    created_at: datetime.datetime
    id: uuid.UUID
    category: str
    email: str | None
    first_name: str | None
    image_url: str | None
    is_admin: bool | None
    last_login: datetime.datetime | None
    last_name: str | None
    logged_in: bool | None
    login_pass: str | None
    user_name: str


async def template_read_all(
    executor: edgedb.AsyncIOExecutor,
    *,
    user_id: uuid.UUID,
) -> list[TemplateReadAllResult]:
    return await executor.query(
        """\
        # Read all template by user ID
        SELECT Template  {**}
        FILTER .created_by.id = <uuid>$user_id;\
        """,
        user_id=user_id,
    )
